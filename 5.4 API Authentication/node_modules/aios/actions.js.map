{"version":3,"sources":["../../../src/actions.ts"],"names":[],"mappings":"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","file":"actions.js","sourcesContent":["// import * as BSON from 'bson';\n\n\nimport {serialize, deserialize} from 'bson';\n\nlet _requestId = 0;\n\nconst PING = 'sys.ping';\nconst DATASOURCE_REGISTER = 'ds';\nconst DATASOURCE_QUERY = 'ds.query';\n\n//\n// const bsonTypes = [BSON.Long, BSON.ObjectID, BSON.Binary,\n//   BSON.Code, BSON.DBRef, BSON.Symbol, BSON.Double,\n//   BSON.Timestamp, BSON.MaxKey, BSON.MinKey];\n// let bsonInstance: any = null;\n\nconst Transport = function (ns: any, data: any, options: any) {\n  // Basic options\n  options = options || {};\n  this.header = {ns: null, req: true, op: null, rid: _requestId++}; // ,flags:b.Binary.fromInt(0)\n  this.header['ns'] = ns;\n  this.data = data || {};\n\n  // // @ts-ignore\n  // bsonInstance = bsonInstance == null ? new BSON(bsonTypes) : bsonInstance;\n  // this.bson = options.bson ? options.bson : bsonInstance;\n\n  // BSON settings\n  this.checkKeys = false;\n  this.asBuffer = true;\n  this.serializeFunctions = false;\n};\n\nTransport.prototype.toBin = function () {\n  const self = this;\n  // const buffers = [];\n  // const projection = null;\n\n  // // Serialize the query\n  // const headerBson = this.bson.serialize(self.header\n  //   , this.checkKeys\n  //   , true\n  //   , this.serializeFunctions);\n  //\n  //\n  // // Serialize the query\n  // const dataBson = this.bson.serialize(this.data\n  //   , this.checkKeys\n  //   , true\n  //   , this.serializeFunctions);\n\n  const headerBson = serialize(self.header, {\n    serializeFunctions: this.serializeFunctions,\n    checkKeys: this.checkKeys,\n    ignoreUndefined: true\n  });\n\n\n  // Serialize the query\n  const dataBson = serialize(self.data, {\n    serializeFunctions: this.serializeFunctions,\n    checkKeys: this.checkKeys,\n    ignoreUndefined: true\n  });\n  // Total message size\n  const totalLength = headerBson.length + dataBson.length;\n\n  // Set up the index\n  const index = 4;\n\n  const header = new Buffer(8);\n\n  // Write total document length\n  header[0] = (totalLength >> 24) & 0xff;\n  header[1] = (totalLength >> 16) & 0xff;\n  header[2] = (totalLength >> 8) & 0xff;\n  header[3] = (totalLength) & 0xff;\n\n  const headerLength = headerBson.length;\n  header[index + 0] = (headerLength >> 24) & 0xff;\n  header[index + 1] = (headerLength >> 16) & 0xff;\n  header[index + 2] = (headerLength >> 8) & 0xff;\n  header[index + 3] = (headerLength) & 0xff;\n\n  const buffer = new Buffer(8 + totalLength);\n  header.copy(buffer);\n  headerBson.copy(buffer, 8);\n  dataBson.copy(buffer, 8 + headerLength);\n\n  // Return the buffers\n  return buffer;\n};\n\nconst Response = function (data: any, opts: any) {\n  opts = opts || {promoteLongs: true};\n  this.parsed = false;\n\n  // @ts-ignore\n  // bsonInstance = bsonInstance == null ? new BSON(bsonTypes) : bsonInstance;\n  // this.bson = opts.bson ? opts.bson : bsonInstance;\n  //\n  // Parse Header\n  //\n  this.index = 0;\n  this.raw = data;\n  this.data = null;\n  this.header = null;\n\n  this.opts = opts;\n\n  // Read the total length\n  // this.totalLength = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;\n  this.totalLength = data[this.index] << 24 | data[this.index + 1] << 16 | data[this.index + 2] << 8 | data[this.index + 3];\n  this.index = this.index + 4;\n\n  // Read header length\n  this.headerLength = data[this.index] << 24 | data[this.index + 1] << 16 | data[this.index + 2] << 8 | data[this.index + 3];\n\n\n  this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n};\n\nResponse.prototype.isParsed = function () {\n  return this.parsed;\n};\n\nResponse.prototype.parse = function (options: any) {\n  // Don't parse again if not needed\n  if (this.parsed) {\n    return;\n  }\n  options = options || {};\n\n  // const _options = {promoteLongs: this.opts.promoteLongs};\n  const _options: any = {promoteLongs: this.opts.promoteLongs};\n  // this.header = this.bson.deserialize(this.raw.slice(8, 8 + this.headerLength), _options);\n  // this.data = this.bson.deserialize(this.raw.slice(8 + this.headerLength), _options);\n  const _buffer = Buffer.from(this.raw);\n  const _headerBuffer = _buffer.slice(8, 8 + this.headerLength);\n  const _dataBuffer = _buffer.slice(8 + this.headerLength);\n  const _header = deserialize(_headerBuffer, _options);\n  const _data = deserialize(_dataBuffer, _options);\n  this.header = _header;\n  this.data = _data;\n  // Set parsed\n  this.parsed = true;\n};\n\n\nconst PingRequest = function () {\n  this.time = new Date();\n};\n\nmodule.exports = {\n  Response: Response,\n  Transport: Transport,\n  PingRequest: PingRequest\n};\n"],"sourceRoot":"."}