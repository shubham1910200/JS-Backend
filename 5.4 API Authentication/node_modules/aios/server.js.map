{"version":3,"sources":["../../../src/server.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAC5B,6CAAwC;AACxC,qCAAqC;AACrC,6CAAwC;AAExC,SAAgB,MAAM,CAAC,OAAY;IACjC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IAExB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,WAAW,CAAC;IAChD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC;IAEzC,YAAY;IACZ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AAExB,CAAC;AAVD,wBAUC;AAAA,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,EAAO,EAAE,IAAS,EAAE,EAAO;IAC9D,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,IAAI,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;QAC1B,MAAM,GAAG,KAAK,CAAC;KAChB;IAED,IAAI,MAAM,EAAE;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAChC;SAAM;QACL,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;KAC9B;AACH,CAAC,CAAC;AAGF,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,EAAO,EAAE,IAAS,EAAE,EAAO;IAChE,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,aAAa;IACb,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAExC,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACvC,UAAU,CAAC,OAAO,CAAC,UAAU,GAAQ,EAAE,IAAS;QAC9C,IAAI,CAAC,GAAG,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,UAAU,GAAQ,EAAE,GAAQ;gBAChD,UAAU,CAAC,OAAO,CAAC;oBACjB,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;wBACnB,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBACzC;yBAAM,IAAI,GAAG,EAAE;wBACd,EAAE,CAAC,GAAG,CAAC,CAAC;qBACT;yBAAM;wBACL,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;qBACpB;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,UAAU,CAAC,OAAO,CAAC;gBACjB,EAAE,CAAC,GAAG,CAAC,CAAC;YACV,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,EAAO,EAAE,IAAS;IACtD,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,aAAa;IACb,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAExC,yBAAyB;IACzB,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACvC,UAAU,CAAC,OAAO,EAAE,CAAC;IACrB,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI;QACF,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;KACxC;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjB,MAAM,CAAC,CAAC;KACT;IAED,UAAU,CAAC,OAAO,EAAE,CAAC;IAErB,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;QACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACvC;IACD,OAAO,QAAQ,CAAC,IAAI,CAAC;AACvB,CAAC,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAY;IAClD,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,IAAI,OAAO,EAAE;QACX,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;KACvC;IACD,aAAa;IACb,IAAI,UAAU,GAAG,IAAI,uBAAU,CAAC,QAAQ,CAAC,CAAC;IAC1C,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,EAAO;IACvC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,CAAC;AAC1D,CAAC,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,IAAS;IAClD,OAAO,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,IAAS,EAAE,OAAY,EAAE,EAAO;IAEtE,IAAI,KAAK,GAAG,KAAK,CAAC;IAClB,IAAI,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;QAC1B,KAAK,GAAG,IAAI,CAAC;KACd;IAED,IAAI,OAAO,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;QACpC,KAAK,GAAG,IAAI,CAAC;QACb,EAAE,GAAG,OAAO,CAAC;QACb,OAAO,GAAG,IAAI,CAAC;KAChB;IAED,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;KACrC;IAED,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;QAE5B,IAAI,KAAK,EAAE;YACT,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;SACzC;aAAM;YACL,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC/B;KAEF;IAED,IAAI,IAAI,GAAG,IAAI,CAAC;IAEhB,oBAAoB;IACpB,IAAI,OAAO,EAAE;QACX,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACnE;QACD,IAAI,OAAO,GAAG,uBAAU,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;SACvD;QAED,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAEpD,IAAI,KAAK,EAAE;YACT,QAAQ;YACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACrC;aAAM;YACL,OAAO;YACP,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC1C;KACF;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;KAChE;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG;IAC3B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;YAC/B,IAAI,GAAG,EAAE;gBACP,MAAM,CAAC,GAAG,CAAC,CAAC;aACb;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAGF,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,EAAO,EAAE,IAAS;IAC1D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;YAC5C,IAAI,GAAG,EAAE;gBACP,MAAM,CAAC,GAAG,CAAC,CAAC;aACb;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,IAAS,EAAE,OAAY;IAClE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;YACpD,IAAI,GAAG,EAAE;gBACP,MAAM,CAAC,GAAG,CAAC,CAAC;aACb;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","file":"server.js","sourcesContent":["import * as _ from 'lodash';\nimport {Connection} from './connection';\nimport * as Actions from './actions';\nimport {DataSource} from './datasource';\n\nexport function Server(options: any) {\n  options = options || {};\n\n  this.options = options;\n  this.options.host = options.host || 'localhost';\n  this.options.port = options.port || 8118;\n\n  // Internals\n  this.dataSources = {};\n\n};\n\nServer.prototype.command = function (ns: any, data: any, fn: any) {\n  var isSync = true;\n  if (fn && _.isFunction(fn)) {\n    isSync = false;\n  }\n\n  if (isSync) {\n    return this._cmdSync(ns, data);\n  } else {\n    this._cmdAsync(ns, data, fn);\n  }\n};\n\n\nServer.prototype._cmdAsync = function (ns: any, data: any, fn: any) {\n  var opts = {};\n  // @ts-ignore\n  var t = new Actions.Transport(ns, data);\n\n  var connection = this.connection(opts);\n  connection.connect(function (err: any, conn: any) {\n    if (!err) {\n      conn.write(t.toBin(), function (err: any, res: any) {\n        connection.destroy(function () {\n          if (res.data.errors) {\n            fn(new Error(JSON.stringify(res.data)));\n          } else if (err) {\n            fn(err);\n          } else {\n            fn(null, res.data);\n          }\n        });\n      });\n    } else {\n      connection.destroy(function () {\n        fn(err);\n      });\n    }\n  });\n\n};\n\nServer.prototype._cmdSync = function (ns: any, data: any) {\n  var opts = {};\n  // @ts-ignore\n  var t = new Actions.Transport(ns, data);\n\n  // currently only synced!\n  var connection = this.connection(opts);\n  connection.connect();\n  var response = null;\n  try {\n    response = connection.write(t.toBin());\n  } catch (e) {\n    console.trace(e);\n    throw e;\n  }\n\n  connection.destroy();\n\n  if (response.data.errors) {\n    console.log(response.data);\n    throw new Error(response.data.errors);\n  }\n  return response.data;\n};\n\nServer.prototype.connection = function (options: any) {\n  var _options = _.clone(this.options);\n  if (options) {\n    _options = _.merge(_options, options);\n  }\n  // @ts-ignore\n  var connection = new Connection(_options);\n  return connection;\n};\n\nServer.prototype.ping = function (fn: any) {\n  return this.command('sys.ping', {time: new Date()}, fn);\n};\n\nServer.prototype.hasDataSource = function (name: any) {\n  return name in this.dataSources;\n};\n\nServer.prototype.dataSource = function (name: any, options: any, fn: any) {\n\n  var async = false;\n  if (fn && _.isFunction(fn)) {\n    async = true;\n  }\n\n  if (options && _.isFunction(options)) {\n    async = true;\n    fn = options;\n    options = null;\n  }\n\n  if (!name) {\n    throw new Error('name must be set');\n  }\n\n  if (this.hasDataSource(name)) {\n\n    if (async) {\n      return fn(null, this.dataSources[name]);\n    } else {\n      return this.dataSources[name];\n    }\n\n  }\n\n  var self = this;\n\n  // is not registered\n  if (options) {\n    if (!options.type) {\n      throw new Error('datasource not present, type must be specified');\n    }\n    var dsClass = DataSource.get(options.type);\n    if (!dsClass) {\n      throw new Error('no class found for ' + options.type);\n    }\n\n    options['name'] = name;\n    this.dataSources[name] = new dsClass(self, options);\n\n    if (async) {\n      // async\n      this.dataSources[name].register(fn);\n    } else {\n      // sync\n      return this.dataSources[name].register();\n    }\n  } else {\n    throw new Error('datasource not present, options must be set');\n  }\n};\n\nServer.prototype.pingAsync = function () {\n  return new Promise((resolve, reject) => {\n    this.ping((err: any, res: any) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n\nServer.prototype.commandAsync = function (ns: any, data: any) {\n  return new Promise((resolve, reject) => {\n    this.command(ns, data, (err: any, res: any) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\nServer.prototype.dataSourceAsync = function (name: any, options: any) {\n  return new Promise((resolve, reject) => {\n    this.dataSource(name, options, (err: any, res: any) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n"],"sourceRoot":"."}